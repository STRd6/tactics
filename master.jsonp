window["STRd6/tactics:master"]({
  "version": "0.1.0",
  "source": {
    "LICENSE": {
      "path": "LICENSE",
      "mode": "100644",
      "content": "The MIT License (MIT)\n\nCopyright (c) 2013 Daniel X Moore\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "type": "blob"
    },
    "README.md": {
      "path": "README.md",
      "mode": "100644",
      "content": "tactics\n=======\n\nIsometric tactics game\n",
      "type": "blob"
    },
    "main.coffee.md": {
      "path": "main.coffee.md",
      "mode": "100644",
      "content": "",
      "type": "blob"
    },
    "tile.coffee.md": {
      "path": "tile.coffee.md",
      "mode": "100644",
      "content": "Tile\n====\n\nA tile in the isometric board.\n\n    Tile = (I={}) ->\n      {sha, back} = I\n    \n      img = $(\"<img>\",\n        src: Resource.url(sha)\n        load: ->\n          self.height = @height\n      ).get(0)\n    \n      if back\n        backImg = $(\"<img>\",\n          src: Resource.url(back)\n          load: ->\n            self.backHeight = @height\n        ).get(0)\n    \n      self = Object.extend {},\n        __proto__: Tile::\n        img: img\n        backImg: backImg\n        orientation: [1, 0]\n      , I\n    \n    Tile:: =\n      toJSON: ->\n        _.omit(@, \"img\", \"backImg\")\n    \n      present: ->\n        frontUrl: Resource.url @sha\n        backUrl: Resource.url(@back || @sha)\n    \n      draw: (canvas, x, y, cameraRotation=Matrix.IDENTITY) ->\n        imgHeight = imgWidth = 64 # TODO real size\n        orientation = cameraRotation.deltaTransformPoint(@orientation).round()\n    \n        hflip = orientation.y\n    \n        back = (orientation.x + orientation.y) < 0\n        if back && @backImg\n          hflip = !hflip\n          img = @backImg\n    \n          offset = 64 - (@backHeight or @height)\n        else\n          img = @img\n          offset = 64 - @height\n    \n        if hflip\n          transform = Matrix.HORIZONTAL_FLIP\n        else\n          transform = Matrix.IDENTITY\n    \n        canvas.withTransform Matrix.translation(x + imgWidth/2, y + imgHeight/2 + offset), =>\n          canvas.withTransform transform, =>\n            canvas.drawImage(img, -imgWidth/2, -imgHeight/2)\n\n    module.exports = Tile\n",
      "type": "blob"
    },
    "test/tile.coffee": {
      "path": "test/tile.coffee",
      "mode": "100644",
      "content": "Tile = require \"../tile\"\n\ndescribe \"Tile\", ->\n  it \"should exist\", ->\n    assert Tile\n",
      "type": "blob"
    },
    "pixie.cson": {
      "path": "pixie.cson",
      "mode": "100644",
      "content": "version: \"0.1.0\"\nwidth: 480\nheight: 320\nremoteDependencies: [\n  \"//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js\"\n  \"//cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js\"\n  \"//code.jquery.com/jquery-1.10.1.min.js\"\n  \"http://strd6.github.io/tempest/javascripts/envweb.js\"\n  \"http://strd6.github.io/require/v0.2.0.js\"\n]\n",
      "type": "blob"
    }
  },
  "distribution": {
    "main": {
      "path": "main",
      "content": "(function() {\n\n\n}).call(this);\n",
      "type": "blob"
    },
    "tile": {
      "path": "tile",
      "content": "(function() {\n  var Tile;\n\n  Tile = function(I) {\n    var back, backImg, img, self, sha;\n    if (I == null) {\n      I = {};\n    }\n    sha = I.sha, back = I.back;\n    img = $(\"<img>\", {\n      src: Resource.url(sha),\n      load: function() {\n        return self.height = this.height;\n      }\n    }).get(0);\n    if (back) {\n      backImg = $(\"<img>\", {\n        src: Resource.url(back),\n        load: function() {\n          return self.backHeight = this.height;\n        }\n      }).get(0);\n    }\n    return self = Object.extend({}, {\n      __proto__: Tile.prototype,\n      img: img,\n      backImg: backImg,\n      orientation: [1, 0]\n    }, I);\n  };\n\n  Tile.prototype = {\n    toJSON: function() {\n      return _.omit(this, \"img\", \"backImg\");\n    },\n    present: function() {\n      return {\n        frontUrl: Resource.url(this.sha),\n        backUrl: Resource.url(this.back || this.sha)\n      };\n    },\n    draw: function(canvas, x, y, cameraRotation) {\n      var back, hflip, img, imgHeight, imgWidth, offset, orientation, transform,\n        _this = this;\n      if (cameraRotation == null) {\n        cameraRotation = Matrix.IDENTITY;\n      }\n      imgHeight = imgWidth = 64;\n      orientation = cameraRotation.deltaTransformPoint(this.orientation).round();\n      hflip = orientation.y;\n      back = (orientation.x + orientation.y) < 0;\n      if (back && this.backImg) {\n        hflip = !hflip;\n        img = this.backImg;\n        offset = 64 - (this.backHeight || this.height);\n      } else {\n        img = this.img;\n        offset = 64 - this.height;\n      }\n      if (hflip) {\n        transform = Matrix.HORIZONTAL_FLIP;\n      } else {\n        transform = Matrix.IDENTITY;\n      }\n      return canvas.withTransform(Matrix.translation(x + imgWidth / 2, y + imgHeight / 2 + offset), function() {\n        return canvas.withTransform(transform, function() {\n          return canvas.drawImage(img, -imgWidth / 2, -imgHeight / 2);\n        });\n      });\n    }\n  };\n\n  module.exports = Tile;\n\n}).call(this);\n",
      "type": "blob"
    },
    "test/tile": {
      "path": "test/tile",
      "content": "(function() {\n  var Tile;\n\n  Tile = require(\"../tile\");\n\n  describe(\"Tile\", function() {\n    return it(\"should exist\", function() {\n      return assert(Tile);\n    });\n  });\n\n}).call(this);\n",
      "type": "blob"
    },
    "pixie": {
      "path": "pixie",
      "content": "module.exports = {\"version\":\"0.1.0\",\"width\":480,\"height\":320,\"remoteDependencies\":[\"//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js\",\"//cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js\",\"//code.jquery.com/jquery-1.10.1.min.js\",\"http://strd6.github.io/tempest/javascripts/envweb.js\",\"http://strd6.github.io/require/v0.2.0.js\"]};",
      "type": "blob"
    }
  },
  "entryPoint": "main",
  "dependencies": {},
  "remoteDependencies": [
    "//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js",
    "//cdnjs.cloudflare.com/ajax/libs/coffee-script/1.6.3/coffee-script.min.js",
    "//code.jquery.com/jquery-1.10.1.min.js",
    "http://strd6.github.io/tempest/javascripts/envweb.js",
    "http://strd6.github.io/require/v0.2.0.js"
  ],
  "repository": {
    "id": 13207718,
    "name": "tactics",
    "full_name": "STRd6/tactics",
    "owner": {
      "login": "STRd6",
      "id": 18894,
      "avatar_url": "https://2.gravatar.com/avatar/33117162fff8a9cf50544a604f60c045?d=https%3A%2F%2Fidenticons.github.com%2F39df222bffe39629d904e4883eabc654.png",
      "gravatar_id": "33117162fff8a9cf50544a604f60c045",
      "url": "https://api.github.com/users/STRd6",
      "html_url": "https://github.com/STRd6",
      "followers_url": "https://api.github.com/users/STRd6/followers",
      "following_url": "https://api.github.com/users/STRd6/following{/other_user}",
      "gists_url": "https://api.github.com/users/STRd6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/STRd6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/STRd6/subscriptions",
      "organizations_url": "https://api.github.com/users/STRd6/orgs",
      "repos_url": "https://api.github.com/users/STRd6/repos",
      "events_url": "https://api.github.com/users/STRd6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/STRd6/received_events",
      "type": "User"
    },
    "private": false,
    "html_url": "https://github.com/STRd6/tactics",
    "description": "Isometric tactics game",
    "fork": false,
    "url": "https://api.github.com/repos/STRd6/tactics",
    "forks_url": "https://api.github.com/repos/STRd6/tactics/forks",
    "keys_url": "https://api.github.com/repos/STRd6/tactics/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/STRd6/tactics/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/STRd6/tactics/teams",
    "hooks_url": "https://api.github.com/repos/STRd6/tactics/hooks",
    "issue_events_url": "https://api.github.com/repos/STRd6/tactics/issues/events{/number}",
    "events_url": "https://api.github.com/repos/STRd6/tactics/events",
    "assignees_url": "https://api.github.com/repos/STRd6/tactics/assignees{/user}",
    "branches_url": "https://api.github.com/repos/STRd6/tactics/branches{/branch}",
    "tags_url": "https://api.github.com/repos/STRd6/tactics/tags",
    "blobs_url": "https://api.github.com/repos/STRd6/tactics/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/STRd6/tactics/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/STRd6/tactics/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/STRd6/tactics/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/STRd6/tactics/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/STRd6/tactics/languages",
    "stargazers_url": "https://api.github.com/repos/STRd6/tactics/stargazers",
    "contributors_url": "https://api.github.com/repos/STRd6/tactics/contributors",
    "subscribers_url": "https://api.github.com/repos/STRd6/tactics/subscribers",
    "subscription_url": "https://api.github.com/repos/STRd6/tactics/subscription",
    "commits_url": "https://api.github.com/repos/STRd6/tactics/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/STRd6/tactics/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/STRd6/tactics/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/STRd6/tactics/issues/comments/{number}",
    "contents_url": "https://api.github.com/repos/STRd6/tactics/contents/{+path}",
    "compare_url": "https://api.github.com/repos/STRd6/tactics/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/STRd6/tactics/merges",
    "archive_url": "https://api.github.com/repos/STRd6/tactics/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/STRd6/tactics/downloads",
    "issues_url": "https://api.github.com/repos/STRd6/tactics/issues{/number}",
    "pulls_url": "https://api.github.com/repos/STRd6/tactics/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/STRd6/tactics/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/STRd6/tactics/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/STRd6/tactics/labels{/name}",
    "created_at": "2013-09-30T06:23:29Z",
    "updated_at": "2013-09-30T06:23:29Z",
    "pushed_at": "2013-09-30T06:23:29Z",
    "git_url": "git://github.com/STRd6/tactics.git",
    "ssh_url": "git@github.com:STRd6/tactics.git",
    "clone_url": "https://github.com/STRd6/tactics.git",
    "svn_url": "https://github.com/STRd6/tactics",
    "homepage": null,
    "size": 0,
    "watchers_count": 0,
    "language": null,
    "has_issues": true,
    "has_downloads": true,
    "has_wiki": true,
    "forks_count": 0,
    "mirror_url": null,
    "open_issues_count": 0,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "master_branch": "master",
    "default_branch": "master",
    "permissions": {
      "admin": true,
      "push": true,
      "pull": true
    },
    "network_count": 0,
    "branch": "master",
    "defaultBranch": "master",
    "includedModules": [
      "Bindable"
    ]
  },
  "progenitor": {
    "url": "http://strd6.github.io/editor/"
  }
});