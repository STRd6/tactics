- ui = this
- ActionPresenter = require "../presenters/action"
- CharacterPresenter = require "../presenters/character"

.ui
  .winner_container
    %h1.winner
    %h3.restart
      = "Play Again?"
      - on "click", ->
        - location.reload()
  %h1.title Tactics
  .hud
    %pre.messages
      - each @messages, (message) ->
        = message
      - @messages.observe ->
        - $(".messages").animate scrollTop: $('.messages')[0].scrollHeight, 1000
    .toggle
      = "="
      - on "click", (e) ->
        - $(e.currentTarget).parent().toggleClass("hidden")
    .characters_container
      - each @characters, (character) ->
        - {classes, click} = CharacterPresenter(character)
        .character(class=classes)
          - on "click", click
          .bolt
          .health
            - character.health().times ->
              %span.heart
          / Ghetto. Doing this to reuse styles from below
          .costs
            .container
              - character.actions().times ->
                .cost
          .avatar
          .info
            %h2.name= character.name()
            %span.type= character.type()
          .stats
            .movement
              %span Movement:
              %span.value= character.movement()
            .strength
              %span Strength:
              %span.value= character.strength()
            .sight
              %span Sight:
              %span.value= character.sight()

  .actions
    - each @actions, (action) ->
      - {classes, click, progress, progressContainer, style, title} = ActionPresenter(action, ui)
      .action(class=classes style=style title=title)
        - if action.cooldown
          .cooldown= action.cooldown
          .progress_container(style=progressContainer)
            .progress(style=progress)
        .costs
          .container
            - action.cost?.times ->
              - typeClass = -> "rest" if action.costType?() is 2
              - title = if typeClass() is "rest" then "Uses remaining actions for this turn" else "Uses #{action.cost} actions"
              .cost(class=typeClass title=title)
        = action.name
        - on "click", click
